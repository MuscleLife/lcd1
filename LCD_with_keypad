/*
 Final code 
*/
#include <stdint.h>
#include "TouchScreen.h"
#include <Arduino.h>
#include <Adafruit_ILI9341.h>
#define YP A2  
#define XM A3 
#define YM 5   
#define XP 4   

#define TFT_DC  9
#define TFT_CS 10

#define TS_MINX 80
#define TS_MINY 120
#define TS_MAXX 920
#define TS_MAXY 940
// For better pressure precision, we need to know the resistance
// between X+ and X- Use any multimeter to read it
// For the one we're using, its 300 ohms across the X plate
TouchScreen ts = TouchScreen(XP, YP, XM, YM, 300);
Adafruit_ILI9341 tft = Adafruit_ILI9341(TFT_CS, TFT_DC);

uint16_t white = tft.color565(255, 255, 255);
uint16_t Blue = tft.color565(90, 0, 0);
uint16_t darkBlue = tft.color565(127, 127, 0);
uint16_t black = tft.color565(0,0,0);

enum StateNames {MENU, INSTRUCTIONS, BEGINWORKOUT, INWORKOUT, ENDWORKOUT, ENTERINGAGE, ENTERINGHEIGHT, ENTERINGWEIGHT, ENTERINGSEX};
StateNames state = MENU;

int ButtonPressedMainMenu = 0;
int counter = 0;
int TouchX = 0;
int TouchY = 0;
String age_string = String("") ;
String height_string = String("");
String weight_string = String("");
bool height_unit_flag = 0;
byte sex_flag = -1;

void setup(void) {
  init();
  tft.begin();
  tft.fillScreen(Blue);
  tft.setRotation(1);
 Serial.begin(9600);
 pinMode(LED_BUILTIN,OUTPUT);
}


/*void loop(void) {
 TSPoint p = ts.getPoint();
 if (p.z > ts.pressureThreshhold) {
    Serial.print("\nOriginal X = "); Serial.print(p.x);
    //Serial.print("\tPressure = "); Serial.println(p.z);
    TouchX =   map(p.y, TS_MINX, TS_MAXX, 0, tft.width());
    Serial.print("\nTouched X = "); Serial.print(TouchX);h
    
    Serial.print("\nOriginal Y = "); Serial.print(p.y);
    TouchY = map(p.x, TS_MINY, TS_MAXY, 0, tft.height());
    Serial.print("\nTouched Y = "); Serial.print(TouchY);   
 }
 if((TouchX>100 && TouchX<140) && (TouchY>150 && TouchY<160))
 {
  ButtonPressedMainMenu = 1;
 }
else if((TouchX>100 && TouchX<137) && (TouchY>140 && TouchY<145))
{
  ButtonPressedMainMenu = 2;
}
 delay(100);
} 
*/
void menuinit()
{
  tft.fillScreen(Blue);
  tft.setTextColor(white);

  tft.setTextSize(4);
  tft.setCursor(40, 25);
  tft.print("MuscleLife");

  tft.setTextSize(2);
  tft.setCursor(89, 95);
  tft.print("Start Workout");

  tft.setCursor(88, 175);
  tft.print("Instructions");
}

void instructionInit() 
{
  tft.fillScreen(darkBlue);
  tft.setTextColor(white, darkBlue);
  tft.setCursor(0, 0);

  tft.println("Connect ECG and EMG leads\n");
  tft.println("as per the locations\n");
  tft.println("suggested in the manual.\n");
  tft.println("Press Startworkout and\n");
  tft.println("wait for 5 seconds.\n");
  tft.println("Press back to return\n");
  tft.print("the main menu\n");

  tft.setCursor(210, 199);
  tft.print("BACK");
}

void BeginWorkoutInit()
{
  tft.fillScreen(darkBlue);
  tft.setTextColor(white);
  tft.setTextSize(2);

  tft.setCursor(25, 25);
  tft.print("Enter Age: ");

  if(age_string.length() != 0)
  {
    tft.setCursor(145,25);
    tft.print(age_string);
  }
 
  tft.setCursor(25, 50);
  tft.print("Enter Height: ");
  if(height_string.length()!=0)
  {
    if(height_unit_flag == 0)
    {
      tft.fillRect(220, 50, 25, 20, darkBlue);
      tft.setCursor(220,50);
      tft.print("CM");
      tft.setCursor(180,50);
      tft.print(height_string);
    }
    else if(height_unit_flag == 1)
    {
      tft.fillRect(220,50, 25, 20, darkBlue);
      tft.setCursor(220,50);
      tft.print("INCHES");
      tft.setCursor(180,50);
      tft.print(height_string);
    }
  }
  
  tft.setCursor(25, 75);
  tft.print("Enter Weight:  ");
  if(weight_string.length()!=0)
  {
    tft.setCursor(180,75);
    tft.print(weight_string);
  }

  tft.setCursor(25,100);
  tft.print("Enter Sex: ");
  if(sex_flag == 0)
  {
    tft.fillRect(165,100, 25, 20, darkBlue);
    tft.setCursor(165,100);
    tft.print("Female");
  }
  else if(sex_flag == 1)
  {
    tft.fillRect(165,100, 25, 20, darkBlue);   
    tft.setCursor(165,100);
    tft.print("Male");
  }
  

  tft.setCursor(140, 125 );
  tft.print("OK");

  tft.setCursor(150, 200);
  tft.print("DELETE ALL");

  tft.setCursor(25, 200);
  tft.print("BACK");
 
}
  

// touch function to check what button is being pressed from main menu
void menu()
{
  TSPoint p = ts.getPoint();
  if (p.z > ts.pressureThreshhold) 
  {
    TouchX = map(p.y, TS_MINX, TS_MAXX, 0, tft.width());
    TouchY = map(p.x, TS_MINY, TS_MAXY, 0, tft.height());
    // if Start workout is touched, Begin workout process
    if((TouchX>140 && TouchX<190) && (TouchY>110 && TouchY<120))
    {
      tft.setTextColor(darkBlue, Blue);
      tft.setCursor(89, 95);
      tft.print("Start Workout");
      BeginWorkoutInit();
      state = BEGINWORKOUT;
    }
    //if Instructions is pressed begin instructions routine and display back button
    else if((TouchX>140 && TouchX<190) && (TouchY>100 && TouchY<109))
    {
      tft.setTextColor(darkBlue, Blue);
      tft.setCursor(88, 175);
      tft.print("Instructions");
      Serial.print("\nInstructions Pressed");
      delay(500);
      instructionInit();
      state = INSTRUCTIONS;
    }
  } 
}

//touch function to check if back is being pressed from instructions menu
void ins()
{
  TSPoint p = ts.getPoint();
  if (p.z > ts.pressureThreshhold) 
  {
    TouchX = map(p.y, TS_MINX, TS_MAXX, 0, tft.width());
    TouchY = map(p.x, TS_MINY, TS_MAXY, 0, tft.height());
    if((TouchX>170 && TouchX<187) && (TouchY>100 && TouchY<108))
    {
      tft.setTextColor(darkBlue, Blue);
      tft.setCursor(210, 199);
      tft.print("BACK");

      delay(500);

      menuinit();
      state = MENU;
      
    }
  }
}

 //age entering function
void enterage()
{   
  bool delete_flag = 0;
  int button_state = 0;
  int display_cursor = 150;
  int string_index = -1;
  tft.setCursor(25,25);
  tft.print("Enter Age: ");
  while (state != BEGINWORKOUT){
  TSPoint p = ts.getPoint();
  if (p.z > ts.pressureThreshhold)
  {
    TouchX = map(p.y, TS_MINX, TS_MAXX, 0, tft.width());
    TouchY = map(p.x, TS_MINY, TS_MAXY, 0, tft.height());
  }
    if ((TouchX > 143 && TouchX < 155) && (TouchY > 120 && TouchY < 124))
    {
      delay(200);
      
        string_index++;       
      
      ButtonPressedMainMenu = 1;
      Serial.print("\n");
      Serial.print(ButtonPressedMainMenu);
      button_state = 1;
      tft.setCursor(display_cursor, 25);
      age_string.concat('1');
      tft.print("1");
    }
    else if ((TouchX > 158 && TouchX < 166) && (TouchY > 120 && TouchY < 124))
    {
      delay(200);
      
        string_index++;       
      
      ButtonPressedMainMenu = 2;
      Serial.print("\n");
      Serial.print(ButtonPressedMainMenu);
      button_state = 1;
      tft.setCursor(display_cursor, 25);
      tft.print("2");
      age_string.concat('2');
    }
    else if ((TouchX > 170 && TouchX < 178) && (TouchY > 120 && TouchY < 124))
    {
      delay(200);
      
        string_index++;       
      
      ButtonPressedMainMenu = 3;
      Serial.print("\n");
      Serial.print(ButtonPressedMainMenu);
      button_state = 1;
      tft.setCursor(display_cursor, 25);
      tft.print("3");
      age_string.concat('3');
    }
    else if ((TouchX > 140 && TouchX < 155) && (TouchY > 112 && TouchY < 117))
    {
      delay(200);
      
        string_index++;       
      
      ButtonPressedMainMenu = 4;
      Serial.print("\n");
      Serial.print(ButtonPressedMainMenu);
      button_state = 1;
      tft.setCursor(display_cursor, 25);
      tft.print("4");
      age_string.concat('4');
    }
    else if ((TouchX > 155 && TouchX < 166) && (TouchY > 110 && TouchY < 119))
    {
      delay(200);
      
        string_index++;       
      
      ButtonPressedMainMenu = 5;
      Serial.print("\n");
      Serial.print(ButtonPressedMainMenu);
      button_state = 1;
      tft.setCursor(display_cursor, 25);
      tft.print("5");
      age_string.concat('5');
    }
    else if ((TouchX > 168 && TouchX < 179) && (TouchY > 110 && TouchY < 118))
    {
      delay(200);
      
        string_index++;       
   
      ButtonPressedMainMenu = 6;
      Serial.print("\n");
      Serial.print(ButtonPressedMainMenu);
      button_state = 1;
      tft.setCursor(display_cursor, 25);
      tft.print("6");
      age_string.concat('6');

    }
    else if ((TouchX > 140 && TouchX < 155) && (TouchY > 105 && TouchY < 110))
    {
      delay(200);
      
        string_index++;       
      ButtonPressedMainMenu = 7;
      Serial.print("\n");
      Serial.print(ButtonPressedMainMenu);
      button_state = 1;
      tft.setCursor(display_cursor, 25);
      tft.print("7");
      age_string.concat('7');
    }
    else if ((TouchX > 155 && TouchX < 165) && (TouchY > 105 && TouchY < 110))
    {
      delay(200);
      
        string_index++;  
      
      ButtonPressedMainMenu = 8;
      Serial.print("\n");
      Serial.print(ButtonPressedMainMenu);
      button_state = 1;
      tft.setCursor(display_cursor, 25);
      tft.print("8");
      age_string.concat('8');
    }
    else if ((TouchX > 168 && TouchX < 180) && (TouchY > 105 && TouchY < 110))
    {
      delay(200);
      string_index++;       
      ButtonPressedMainMenu = 9;
      Serial.print("\n");
      Serial.print(ButtonPressedMainMenu);
      button_state = 1;
      tft.setCursor(display_cursor, 25);
      tft.print("9");
      age_string.concat('9');
    }
    else if ((TouchX > 155 && TouchX < 169) && (TouchY > 100 && TouchY < 105))
    {
      delay(200);
      string_index++;        
      ButtonPressedMainMenu = 0;
      Serial.print("\n");
      Serial.print(ButtonPressedMainMenu);
      button_state = 1;
      tft.setCursor(display_cursor, 25);
      tft.print("0");
      age_string.concat('0');
    }
    else if ((TouchX > 130 && TouchX < 140) && (TouchY > 100 && TouchY < 105))
    {
      //ok pressed
      tft.setTextColor(darkBlue, Blue);
      tft.setCursor(45, 200);
      delay(100);
      Serial.print("\n");
      Serial.print("OK Pressed");
     break;
    }
    else if ((TouchX > 175 && TouchX < 195) && (TouchY > 100 && TouchY < 105))
    {
      delete_flag = 1;
      Serial.print("\n");
      Serial.print("DEL Pressed");
      delay(100);
      display_cursor = display_cursor - 12;
      if (display_cursor < 150)
      {
        display_cursor = 155;
      }
      tft.setCursor(display_cursor, 25);                 
      tft.fillRect(display_cursor - 12, 20, 25, 20, darkBlue);
      age_string.remove(0,string_index+1); 
      string_index = 0;
    }

    if (button_state == 1)
    {
      display_cursor = display_cursor + 15;
      button_state = 0;
      TouchX = 0;
      TouchY = 0;
    }
    Serial.print("\n");
    Serial.print(age_string);
     
        }
        state = BEGINWORKOUT;
        BeginWorkoutInit();
        
        
     
  }


void BeginWorkout()
{
  TSPoint p = ts.getPoint();
  if (p.z > ts.pressureThreshhold) 
  {
    TouchX = map(p.y, TS_MINX, TS_MAXX, 0, tft.width());
    TouchY = map(p.x, TS_MINY, TS_MAXY, 0, tft.height());
    //check for back being pressed
    if((TouchX>125 && TouchX<142) && (TouchY>100 && TouchY<105))
    {
      tft.setTextColor(darkBlue, Blue);
      tft.setCursor(25, 200);
      tft.print("BACK");

      delay(500);

      menuinit();
      state = MENU;
    }
    //check if enter age is pressed
    if((TouchX>125 && TouchX<160) && (TouchY>125 && TouchY<128))
    {
      tft.setTextColor(darkBlue, Blue);
      tft.setCursor(25, 25);
      tft.print("Enter Age: ");
      keypad_init();
      state = ENTERINGAGE;
      
    }
    //check if enter age is pressed
    if((TouchX>128 && TouchX<164) && (TouchY>121 && TouchY<124))
    {
      tft.setTextColor(darkBlue,Blue);
      tft.setCursor(25,50);
      tft.print("Enter Height: ");
      state = ENTERINGHEIGHT;
      keypad_init();
       
    }
    //check if enter weight is pressed
    if((TouchX>128 && TouchX<164) &&  (TouchY>118 && TouchY<121))
    {
      tft.setTextColor(darkBlue,Blue);
      tft.setCursor(25,75);
      tft.print("Enter Weight: ");
      keypad_init();
      state = ENTERINGWEIGHT;
    }
    //check if enter sex is pressed
    if((TouchX>129 && TouchX<156) && (TouchY>115 && TouchY<117))
    {
      tft.setTextColor(darkBlue,Blue);
      tft.setCursor(25,100);
      tft.print("Enter Sex: ");
      enterSexInit();
      state = ENTERINGSEX;
    }
    //check if ok is pressed
    if((TouchX>157 && TouchX<163) && (TouchY>111 && TouchY<113))
    {
      tft.setTextColor(darkBlue,Blue);
      tft.setCursor(140,125);
      tft.print("OK");
      inWorkoutinit();
      state = INWORKOUT;
    }  
  }
}
void inWorkoutinit()
{
  int initial_x = 10;
  int initial_y = 150;
  tft.fillScreen(darkBlue);
  tft.setTextSize(1);
  tft.setTextColor(white);
  tft.fillRect(0,0,320,40,black);
  tft.setCursor(10,10);
  tft.print("AGE:");
  tft.setCursor(40,10);
  tft.print(age_string);
  tft.setCursor(60,10);
  tft.print("years");
  tft.setCursor(10,30);
  tft.print("Height: ");
  tft.print(height_string);
  tft.setCursor(80,30);
  if(height_unit_flag == 0)
  {
    tft.print("CM");
  }
  else if(height_unit_flag == 1)
  {
    tft.print("INCHES");
  }
  tft.setCursor(150,10);
  tft.print("Weight: ");
  tft.print(weight_string);
  tft.setCursor(220,10);
  tft.print("Kg");
  tft.setCursor(150,30);
  tft.print("Sex:");
  tft.setCursor(180,30);
  if(sex_flag == 0)
  {
    tft.print("Female");
  }
  else
  {
    tft.print("Male");
  } 
}

void heartRateGraphic()
{
  tft.fillRect(10,180,5,5,white);
tft.fillRect(15,180,5,5,white);
tft.fillRect(20,180,5,5,white);
tft.fillRect(25,180,5,5,white);
tft.fillRect(30,180,5,5,white);
tft.fillRect(35,180,5,5,white);
//hr begins
  tft.fillRect(40,175,5,5,white);
  delay(30);
  tft.fillRect(40,170,5,5,white);
  delay(30);
  tft.fillRect(40,165,5,5,white);
  delay(30);
  tft.fillRect(45,160,5,5,white);
  delay(30);
  tft.fillRect(45,155,5,5,white);
  delay(30);
  tft.fillRect(45,150,5,5,white);
  delay(30);
  tft.fillRect(50,145,5,5,white);
  delay(30);
  tft.fillRect(50,140,5,5,white);
  delay(30);
  tft.fillRect(50,135,5,5,white);
  delay(30);
  tft.fillRect(55,130,5,5,white);
  delay(30);
  tft.fillRect(55,125,5,5,white);
  delay(30);
  tft.fillRect(55,120,5,5,white);
  delay(30);
  tft.fillRect(60,115,5,5,white);
  delay(30);
  tft.fillRect(60,110,5,5,white);
  delay(30);
  tft.fillRect(65,120,5,5,white);
  delay(30);
  tft.fillRect(65,125,5,5,white);
  delay(30);
  tft.fillRect(65,130,5,5,white);
  delay(30);
  tft.fillRect(70,135,5,5,white);
  delay(30);
  tft.fillRect(70,140,5,5,white);
  delay(30);
  tft.fillRect(70,145,5,5,white);
  delay(30);
  tft.fillRect(75,150,5,5,white);
  delay(30);
  tft.fillRect(75,155,5,5,white);
  delay(30);
  tft.fillRect(75,160,5,5,white);
  delay(30);
  tft.fillRect(80,165,5,5,white);
  delay(30);
  tft.fillRect(80,170,5,5,white);
  delay(30);
  tft.fillRect(80,175,5,5,white);
  delay(30);
  tft.fillRect(85,180,5,5,white);
  delay(30);
  tft.fillRect(85,185,5,5,white);
  delay(50);
  tft.fillRect(85,190,5,5,white);
  delay(30);
  tft.fillRect(90,195,5,5,white);
  delay(30);
  tft.fillRect(90,200,5,5,white);
  delay(30);
  tft.fillRect(90,205,5,5,white);
  delay(30);
  tft.fillRect(95,210,5,5,white);
  delay(30);
  tft.fillRect(95,215,5,5,white);
  delay(30);
  tft.fillRect(100,205,5,5,white);
  delay(30);
  tft.fillRect(100,200,5,5,white);
  delay(30);
  tft.fillRect(100,195,5,5,white);
  delay(30);
  tft.fillRect(105,190,5,5,white);
  delay(30);
  tft.fillRect(105,185,5,5,white);
  delay(30);
  tft.fillRect(105,180,5,5,white);
  delay(30);
  tft.fillRect(110,175,5,5,white);
  delay(30);
  tft.fillRect(110,170,5,5,white);
  delay(30);
  tft.fillRect(110,165,5,5,white);
  delay(30);
  tft.fillRect(115,160,5,5,white);
  delay(30);
  tft.fillRect(115,155,5,5,white);
  delay(30);
  tft.fillRect(120,165,5,5,white);
  delay(30);
  tft.fillRect(120,170,5,5,white);
  delay(30);
  tft.fillRect(120,175,5,5,white);
  delay(30);
//Hr stops 
tft.fillRect(125,180,5,5,white);
delay(30);
tft.fillRect(130,180,5,5,white);
delay(30);
tft.fillRect(135,180,5,5,white);
delay(30);
tft.fillRect(140,180,5,5,white);
delay(30);
tft.fillRect(145,180,5,5,white);
delay(30);

//flicerking
tft.fillRect(10,180,5,5,Blue);
tft.fillRect(15,180,5,5,Blue);
tft.fillRect(20,180,5,5,Blue);
tft.fillRect(25,180,5,5,Blue);
tft.fillRect(30,180,5,5,Blue);
tft.fillRect(35,180,5,5,Blue);
//hr begins
  tft.fillRect(40,175,5,5,Blue);
  delay(30);
  tft.fillRect(40,170,5,5,Blue);
  delay(30);
  tft.fillRect(40,165,5,5,Blue);
  delay(30);
  tft.fillRect(45,160,5,5,Blue);
  delay(30);
  tft.fillRect(45,155,5,5,Blue);
  delay(30);
  tft.fillRect(45,150,5,5,Blue);
  delay(30);
  tft.fillRect(50,145,5,5,Blue);
  delay(30);
  tft.fillRect(50,140,5,5,Blue);
  delay(30);
  tft.fillRect(50,135,5,5,Blue);
  delay(30);
  tft.fillRect(55,130,5,5,Blue);
  delay(30);
  tft.fillRect(55,125,5,5,Blue);
  delay(30);
  tft.fillRect(55,120,5,5,Blue);
  delay(30);
  tft.fillRect(60,115,5,5,Blue);
  delay(30);
  tft.fillRect(60,110,5,5,Blue);
  delay(30);
  tft.fillRect(65,120,5,5,Blue);
  delay(30);
  tft.fillRect(65,125,5,5,Blue);
  delay(30);
  tft.fillRect(65,130,5,5,Blue);
  delay(30);
  tft.fillRect(70,135,5,5,Blue);
  delay(30);
  tft.fillRect(70,140,5,5,Blue);
  delay(30);
  tft.fillRect(70,145,5,5,Blue);
  delay(30);
  tft.fillRect(75,150,5,5,Blue);
  delay(30);
  tft.fillRect(75,155,5,5,Blue);
  delay(30);
  tft.fillRect(75,160,5,5,Blue);
  delay(30);
  tft.fillRect(80,165,5,5,Blue);
  delay(30);
  tft.fillRect(80,170,5,5,Blue);
  delay(30);
  tft.fillRect(80,175,5,5,Blue);
  delay(30);
  tft.fillRect(85,180,5,5,Blue);
  delay(30);
  tft.fillRect(85,185,5,5,Blue);
  delay(50);
  tft.fillRect(85,190,5,5,Blue);
  delay(30);
  tft.fillRect(90,195,5,5,Blue);
  delay(30);
  tft.fillRect(90,200,5,5,Blue);
  delay(30);
  tft.fillRect(90,205,5,5,Blue);
  delay(30);
  tft.fillRect(95,210,5,5,Blue);
  delay(30);
  tft.fillRect(95,215,5,5,Blue);
  delay(30);
  tft.fillRect(100,205,5,5,Blue);
  delay(30);
  tft.fillRect(100,200,5,5,Blue);
  delay(30);
  tft.fillRect(100,195,5,5,Blue);
  delay(30);
  tft.fillRect(105,190,5,5,Blue);
  delay(30);
  tft.fillRect(105,185,5,5,Blue);
  delay(30);
  tft.fillRect(105,180,5,5,Blue);
  delay(30);
  tft.fillRect(110,175,5,5,Blue);
  delay(30);
  tft.fillRect(110,170,5,5,Blue);
  delay(30);
  tft.fillRect(110,165,5,5,Blue);
  delay(30);
  tft.fillRect(115,160,5,5,Blue);
  delay(30);
  tft.fillRect(115,155,5,5,Blue);
  delay(30);
  tft.fillRect(120,165,5,5,Blue);
  delay(30);
  tft.fillRect(120,170,5,5,Blue);
  delay(30);
  tft.fillRect(120,175,5,5,Blue);
  delay(30);
//Hr stops 
tft.fillRect(125,180,5,5,Blue);
delay(30);
tft.fillRect(130,180,5,5,Blue);
delay(30);
tft.fillRect(135,180,5,5,Blue);
delay(30);
tft.fillRect(140,180,5,5,Blue);
delay(30);
tft.fillRect(145,180,5,5,Blue);
delay(30);
}

float BmiCalculator(byte sex_flag, String height_string, String weight_string, bool height_unit_flag)
{
  float height;
  float weight;
  float BMI;
  height = height_string.toInt();
  weight = weight_string.toInt();
  height = height/100;
  Serial.print("\nHeight: ");
  Serial.print(height);
  Serial.print("\nWeight: ");
  Serial.print(weight); 
 
  if(height_unit_flag == 0)
  {
    BMI = (weight/((height*height)));
  }
  return BMI;  
}



void inWorkout()
{
  float BMI;
  BMI = BmiCalculator(sex_flag,height_string,weight_string,height_unit_flag);
  tft.setTextSize(2);
  tft.setCursor(12,60);
  tft.print("BMI:");
  tft.setCursor(60,60);
  tft.print(BMI);
  while (state != ENDWORKOUT)
  {
    heartRateGraphic();
    
  }
}

void enterSexInit()
{
  tft.fillScreen(darkBlue);
  tft.setTextColor(white);
  tft.setTextSize(2);
  tft.setCursor(100,75);
  tft.print("Male");
  tft.setCursor(175,75);
  tft.print("Female");
  tft.setCursor(145, 125 );
  tft.print("OK");
  tft.setCursor(125, 200);
  tft.print("DELETE");
}

void enterSex()
{
  tft.setCursor(25,25);
  tft.print("Enter Sex: ");
  while(state!=BEGINWORKOUT)
  {
    TSPoint p = ts.getPoint();
    if (p.z > ts.pressureThreshhold)
  {
    TouchX = map(p.y, TS_MINX, TS_MAXX, 0, tft.width());
    TouchY = map(p.x, TS_MINY, TS_MAXY, 0, tft.height());
  }
  //check if male is pressed
  if((TouchX>147 &&TouchX<158) && (TouchY>118 && TouchY<120))
  {
    delay(200);
    sex_flag = 1;     //toggle sex_flag to 1 when male entered
    tft.fillRect(150, 20, 50, 20, darkBlue);
    tft.setCursor(150,25);
    tft.print("Male");
  }
  //check if female is pressed
  else if((TouchX>166 && TouchX<183 ) && (TouchY>118 &&TouchY<121))
  {
    delay(200);
    sex_flag = 0;  //by default sex selected will be female
    tft.fillRect(150, 20, 50, 20, darkBlue);
    tft.setCursor(150,25);
    tft.print("Female");
  }
  //check if ok is pressed
  else if((TouchX>158 && TouchX<161) && (TouchY>112 && TouchY<114))
  {
    
    tft.setTextColor(darkBlue, Blue);
    tft.setCursor(145, 125 );
    tft.print("OK");
    
    break;
  }
  //check if delete is pressed
  else if((TouchX>153 && TouchX<172 ) && (TouchY>102 && TouchY<105))
  {
     tft.fillRect(150, 20, 45, 20, darkBlue);
     sex_flag = -1;   
  }
  
  }
  state = BEGINWORKOUT;
  BeginWorkoutInit();
}

void keypad_init()
{
  tft.fillScreen(darkBlue);
  tft.setTextColor(white, darkBlue);
  tft.drawRect(90,45,35,35,white);
  tft.setCursor(100,50);
  tft.print("1");

  tft.drawRect(90,95,35,35,white);
  tft.setCursor(150,50);
  tft.print("2");

  tft.drawRect(140,95,35,35,white);
  tft.setCursor(200,50);
  tft.print("3");
 
  tft.drawRect(140,45,35,35,white);
  tft.setCursor(100,100);
  tft.print("4");

  tft.drawRect(190,95,35,35,white);
  tft.setCursor(150,100);
  tft.print("5");

  tft.drawRect(90,145,35,35,white);
  tft.setCursor(200,100);
  tft.print("6");

  tft.drawRect(190,45,35,35,white);
  tft.setCursor(100,150);
  tft.print("7");
  
  tft.drawRect(140,145,35,35,white);
  tft.setCursor(150,150);
  tft.print("8");
  
  tft.drawRect(190,145,35,35,white);
  tft.setCursor(200,150);
  tft.print("9");
  
  tft.drawRect(140,195,35,35,white);
  tft.setCursor(150,200);
  tft.print("0");

  tft.setCursor(45, 200); 
  tft.setTextSize(2);

  tft.print("OK");

  tft.setCursor(240, 200);
  
  tft.print("DEL");

  if(state == ENTERINGHEIGHT)
  {
    tft.setCursor(250,55);
    tft.print("CM");
    tft.setCursor(240,105);
    tft.print("INCHES");
  }
  
}
void enterweight()
{
  
  bool delete_flag = 0;
  int button_state = 0;
  int display_cursor = 180;
  int string_index = -1;
   weight_string.remove(0,string_index+1);
  tft.setCursor(25,25);
  tft.print("Enter Weight: ");
  while (state != BEGINWORKOUT){
  TSPoint p = ts.getPoint();
  if (p.z > ts.pressureThreshhold)
  {
    TouchX = map(p.y, TS_MINX, TS_MAXX, 0, tft.width());
    TouchY = map(p.x, TS_MINY, TS_MAXY, 0, tft.height());
  }
    if ((TouchX > 143 && TouchX < 155) && (TouchY > 120 && TouchY < 124))
    {
      delay(200);
      
        string_index++;       
      
      ButtonPressedMainMenu = 1;
      Serial.print("\n");
      Serial.print(ButtonPressedMainMenu);
      button_state = 1;
      tft.setCursor(display_cursor, 25);
      weight_string.concat('1');
      tft.print("1");
    }
    else if ((TouchX > 158 && TouchX < 166) && (TouchY > 120 && TouchY < 124))
    {
      delay(200);
      
        string_index++;       
      
      ButtonPressedMainMenu = 2;
      Serial.print("\n");
      Serial.print(ButtonPressedMainMenu);
      button_state = 1;
      tft.setCursor(display_cursor, 25);
      tft.print("2");
      weight_string.concat('2');
    }
    else if ((TouchX > 170 && TouchX < 178) && (TouchY > 120 && TouchY < 124))
    {
      delay(200);
      
        string_index++;       
      
      ButtonPressedMainMenu = 3;
      Serial.print("\n");
      Serial.print(ButtonPressedMainMenu);
      button_state = 1;
      tft.setCursor(display_cursor, 25);
      tft.print("3");
      weight_string.concat('3');
    }
    else if ((TouchX > 140 && TouchX < 155) && (TouchY > 112 && TouchY < 117))
    {
      delay(200);
      
        string_index++;       
      
      ButtonPressedMainMenu = 4;
      Serial.print("\n");
      Serial.print(ButtonPressedMainMenu);
      button_state = 1;
      tft.setCursor(display_cursor, 25);
      tft.print("4");
      weight_string.concat('4');
    }
    else if ((TouchX > 155 && TouchX < 166) && (TouchY > 110 && TouchY < 119))
    {
      delay(200);
      
        string_index++;       
      
      ButtonPressedMainMenu = 5;
      Serial.print("\n");
      Serial.print(ButtonPressedMainMenu);
      button_state = 1;
      tft.setCursor(display_cursor, 25);
      tft.print("5");
      weight_string.concat('5');
    }
    else if ((TouchX > 168 && TouchX < 179) && (TouchY > 110 && TouchY < 118))
    {
      delay(200);
      
        string_index++;       
   
      ButtonPressedMainMenu = 6;
      Serial.print("\n");
      Serial.print(ButtonPressedMainMenu);
      button_state = 1;
      tft.setCursor(display_cursor, 25);
      tft.print("6");
      weight_string.concat('6');

    }
    else if ((TouchX > 140 && TouchX < 155) && (TouchY > 105 && TouchY < 110))
    {
      delay(200);
      
        string_index++;       
      ButtonPressedMainMenu = 7;
      Serial.print("\n");
      Serial.print(ButtonPressedMainMenu);
      button_state = 1;
      tft.setCursor(display_cursor, 25);
      tft.print("7");
      weight_string.concat('7');
    }
    else if ((TouchX > 155 && TouchX < 165) && (TouchY > 105 && TouchY < 110))
    {
      delay(200);
      
        string_index++;  
      
      ButtonPressedMainMenu = 8;
      Serial.print("\n");
      Serial.print(ButtonPressedMainMenu);
      button_state = 1;
      tft.setCursor(display_cursor, 25);
      tft.print("8");
      weight_string.concat('8');
    }
    else if ((TouchX > 168 && TouchX < 180) && (TouchY > 105 && TouchY < 110))
    {
      delay(200);
      string_index++;       
      ButtonPressedMainMenu = 9;
      Serial.print("\n");
      Serial.print(ButtonPressedMainMenu);
      button_state = 1;
      tft.setCursor(display_cursor, 25);
      tft.print("9");
      weight_string.concat('9');
    }
    else if ((TouchX > 155 && TouchX < 169) && (TouchY > 100 && TouchY < 105))
    {
      delay(200);
      string_index++;        
      ButtonPressedMainMenu = 0;
      Serial.print("\n");
      Serial.print(ButtonPressedMainMenu);
      button_state = 1;
      tft.setCursor(display_cursor, 25);
      tft.print("0");
      weight_string.concat('0');
    }
    else if ((TouchX > 130 && TouchX < 140) && (TouchY > 100 && TouchY < 105))
    {
      //ok pressed
      tft.setTextColor(darkBlue, Blue);
      tft.setCursor(45, 200);
      delay(100);
      Serial.print("\n");
      Serial.print("OK Pressed");
     break;
    }
    else if ((TouchX > 175 && TouchX < 195) && (TouchY > 100 && TouchY < 105))
    {
      delete_flag = 1;
      Serial.print("\n");
      Serial.print("DEL Pressed");
      delay(100);
      display_cursor = display_cursor - 12;
      if (display_cursor < 180)
      {
        display_cursor = 185;
      }
      tft.setCursor(display_cursor, 25);                 
      tft.fillRect(display_cursor - 10, 20, 25, 20, darkBlue);
      weight_string.remove(0,string_index+1); 
      string_index = 0;
    }

    if (button_state == 1)
    {
      display_cursor = display_cursor + 15;
      button_state = 0;
      TouchX = 0;
      TouchY = 0;
    }
        }
        state = BEGINWORKOUT;
        BeginWorkoutInit();
        
        
     
  }


void enterheight()
{
  bool delete_flag = 0;
  int button_state = 0;
  int display_cursor = 180;
  int string_index = -1;
  height_string.remove(0,string_index+1); 
  tft.setCursor(25,25);
  tft.print("Enter Height: ");
  while (state != BEGINWORKOUT){
  TSPoint p = ts.getPoint();
  if (p.z > ts.pressureThreshhold)
  {
    TouchX = map(p.y, TS_MINX, TS_MAXX, 0, tft.width());
    TouchY = map(p.x, TS_MINY, TS_MAXY, 0, tft.height());
  }
    if ((TouchX > 143 && TouchX < 155) && (TouchY > 120 && TouchY < 124))
    {
      delay(200);
      
        string_index++;       
      
      ButtonPressedMainMenu = 1;
      Serial.print("\n");
      Serial.print(ButtonPressedMainMenu);
      button_state = 1;
      tft.setCursor(display_cursor, 25);
      height_string.concat('1');
      tft.print("1");
    }
    else if ((TouchX > 158 && TouchX < 166) && (TouchY > 120 && TouchY < 124))
    {
      delay(200);
      
        string_index++;       
      
      ButtonPressedMainMenu = 2;
      Serial.print("\n");
      Serial.print(ButtonPressedMainMenu);
      button_state = 1;
      tft.setCursor(display_cursor, 25);
      tft.print("2");
      height_string.concat('2');
    }
    else if ((TouchX > 170 && TouchX < 178) && (TouchY > 120 && TouchY < 124))
    {
      delay(200);
      
        string_index++;       
      
      ButtonPressedMainMenu = 3;
      Serial.print("\n");
      Serial.print(ButtonPressedMainMenu);
      button_state = 1;
      tft.setCursor(display_cursor, 25);
      tft.print("3");
      height_string.concat('3');
    }
    else if ((TouchX > 140 && TouchX < 155) && (TouchY > 112 && TouchY < 117))
    {
      delay(200);
      
        string_index++;       
      
      ButtonPressedMainMenu = 4;
      Serial.print("\n");
      Serial.print(ButtonPressedMainMenu);
      button_state = 1;
      tft.setCursor(display_cursor, 25);
      tft.print("4");
      height_string.concat('4');
    }
    else if ((TouchX > 155 && TouchX < 166) && (TouchY > 110 && TouchY < 119))
    {
      delay(200);
      
        string_index++;       
      
      ButtonPressedMainMenu = 5;
      Serial.print("\n");
      Serial.print(ButtonPressedMainMenu);
      button_state = 1;
      tft.setCursor(display_cursor, 25);
      tft.print("5");
      height_string.concat('5');
    }
    else if ((TouchX > 168 && TouchX < 179) && (TouchY > 110 && TouchY < 118))
    {
      delay(200);
      
        string_index++;       
   
      ButtonPressedMainMenu = 6;
      Serial.print("\n");
      Serial.print(ButtonPressedMainMenu);
      button_state = 1;
      tft.setCursor(display_cursor, 25);
      tft.print("6");
      height_string.concat('6');

    }
    else if ((TouchX > 140 && TouchX < 155) && (TouchY > 105 && TouchY < 110))
    {
      delay(200);
      
        string_index++;       
      ButtonPressedMainMenu = 7;
      Serial.print("\n");
      Serial.print(ButtonPressedMainMenu);
      button_state = 1;
      tft.setCursor(display_cursor, 25);
      tft.print("7");
      height_string.concat('7');
    }
    else if ((TouchX > 155 && TouchX < 165) && (TouchY > 105 && TouchY < 110))
    {
      delay(200);
      
        string_index++;  
      
      ButtonPressedMainMenu = 8;
      Serial.print("\n");
      Serial.print(ButtonPressedMainMenu);
      button_state = 1;
      tft.setCursor(display_cursor, 25);
      tft.print("8");
      height_string.concat('8');
    }
    else if ((TouchX > 168 && TouchX < 180) && (TouchY > 105 && TouchY < 110))
    {
      delay(200);
      string_index++;       
      ButtonPressedMainMenu = 9;
      Serial.print("\n");
      Serial.print(ButtonPressedMainMenu);
      button_state = 1;
      tft.setCursor(display_cursor, 25);
      tft.print("9");
      height_string.concat('9');
    }
    else if ((TouchX > 155 && TouchX < 169) && (TouchY > 100 && TouchY < 105))
    {
      delay(200);
      string_index++;        
      ButtonPressedMainMenu = 0;
      Serial.print("\n");
      Serial.print(ButtonPressedMainMenu);
      button_state = 1;
      tft.setCursor(display_cursor, 25);
      tft.print("0");
      height_string.concat('0');
    }
     //centimeter pressed
    else if((TouchX>187&&TouchX<189) && (TouchY>120&&TouchY<122))
    {
       tft.setTextColor(darkBlue, Blue);
       tft.setCursor(250,55);
       tft.print("CM");  
       tft.setTextColor(white,white);
       tft.setCursor(240,105);
       tft.print("INCHES");
       height_unit_flag = 0; //height_unit_flag will be later used to calculate the BMI, when value is 0, height is in cm.
    }
    //inches pressed
    else if((TouchX>184 &&TouchX<199) && (TouchY>114 && TouchY<120))
    {
      tft.setTextColor(darkBlue, Blue);
      tft.setCursor(240,105);
      tft.print("INCHES");
      tft.setTextColor(white,white);
      tft.setCursor(250,55);
       tft.print("CM");
      height_unit_flag = 1;
    }
    else if ((TouchX > 130 && TouchX < 140) && (TouchY > 100 && TouchY < 105))
    {
      //ok pressed
      tft.setTextColor(darkBlue, Blue);
      tft.setCursor(45, 200);
      delay(100);
      Serial.print("\n");
      Serial.print("OK Pressed");
     break;
    }
    else if ((TouchX > 175 && TouchX < 195) && (TouchY > 100 && TouchY < 105))
    {
      delete_flag = 1;
      Serial.print("\n");
      Serial.print("DEL Pressed");
      delay(100);
      display_cursor = display_cursor - 12;
      if (display_cursor < 180)
      {
        display_cursor = 185;
      }
      tft.setCursor(display_cursor, 25);                 
      tft.fillRect(display_cursor - 10, 20, 25, 20, darkBlue);
      
      height_string.remove(0,string_index+1); 
      string_index = 0;
    }
   

    if (button_state == 1)
    {
      display_cursor = display_cursor + 15;
      button_state = 0;
      TouchX = 0;
      TouchY = 0;
    }
    Serial.print("\n");
    Serial.print(height_string);
     
        }
        state = BEGINWORKOUT;
        BeginWorkoutInit();
  }


  







int main()
{
  setup();
  menuinit();
  while(true)
  {
    if (state == MENU)
    {
      menu();
    }
    else if (state == INSTRUCTIONS)
    {
      ins();
    }
    else if (state == BEGINWORKOUT)
    {
      BeginWorkout();
    }
    else if (state == ENTERINGAGE)
    {
      enterage();
    }
    else if(state == ENTERINGHEIGHT)
    {
      enterheight();
    }
    else if(state == ENTERINGWEIGHT)
    {
      enterweight();
    }
    else if(state == ENTERINGSEX)
    {
      enterSex();
    }
    else if(state == INWORKOUT)
    {
      inWorkout();
    }
    
    
    
   /* else if (state == ENDWORKOUT)
    {
      exitWorkout();
    }*/
  }
  return 0;
}
